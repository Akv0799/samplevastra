// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VastrafySetup.Data;

#nullable disable

namespace VastrafySetup.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250422180840_InitialCreateCuttingEntry")]
    partial class InitialCreateCuttingEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VastrafySetup.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("VastrafySetup.Models.CuttingEntryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuttingEntryId")
                        .HasColumnType("int");

                    b.Property<Guid>("CuttingEntryId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuttingEntryId1");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("CuttingEntryDetails");
                });

            modelBuilder.Entity("VastrafySetup.Models.Entities.CuttingEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CuttingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CuttingEntries");
                });

            modelBuilder.Entity("VastrafySetup.Models.Entities.SizeQuantity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuttingEntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CuttingEntryId");

                    b.ToTable("SizeQuantity");
                });

            modelBuilder.Entity("VastrafySetup.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("VastrafySetup.Models.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("VastrafySetup.Models.CuttingEntryDetail", b =>
                {
                    b.HasOne("VastrafySetup.Models.Entities.CuttingEntry", "CuttingEntry")
                        .WithMany("CuttingDetails")
                        .HasForeignKey("CuttingEntryId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VastrafySetup.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VastrafySetup.Models.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuttingEntry");

                    b.Navigation("Size");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("VastrafySetup.Models.Entities.SizeQuantity", b =>
                {
                    b.HasOne("VastrafySetup.Models.Entities.CuttingEntry", "CuttingEntry")
                        .WithMany("SizeQuantities")
                        .HasForeignKey("CuttingEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuttingEntry");
                });

            modelBuilder.Entity("VastrafySetup.Models.Style", b =>
                {
                    b.HasOne("VastrafySetup.Models.Brand", "Brand")
                        .WithMany("Style")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("VastrafySetup.Models.Brand", b =>
                {
                    b.Navigation("Style");
                });

            modelBuilder.Entity("VastrafySetup.Models.Entities.CuttingEntry", b =>
                {
                    b.Navigation("CuttingDetails");

                    b.Navigation("SizeQuantities");
                });
#pragma warning restore 612, 618
        }
    }
}
